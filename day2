    1  whoami
    2  mkdir /work
    3  cd /work
    4  git config --global user.name "Bard K. Roh"
    5  git config --global user.email "bardroh@weable.ai"
    6  git config --global --list
    7  ssh-keygen
    8  ls /root/.ssh
    9  cat id_rsa
   10  cat /root/.ssh/id_rsa
   11  cat /root/.ssh/id_rsa.pub 
   12  cat ~/.ssh/id_rsa.pub
   13  git clone git@github.com:weable72/gsc-spring-cloud-msa-2023-1st.git
   14  ls
   15  cd gsc-spring-cloud-msa-2023-1st/
   16  ls
   17  cd src
   18  ls
   19  cd bardroh/
   20  ls
   21  cd day02/
   22  ls
   23  history > h4.txt


 whoami
    2  mkdir /work
    3  cd /work
    4  git config --global user.name "Bard K. Roh"
    5  git config --global user.email "bardroh@weable.ai"
    6  git config --global --list
    7  ssh-keygen
    8  ls /root/.ssh
    9  cat ~/.ssh/id_rsa.pub
   10  git clone git@github.com:weable72/gsc-spring-cloud-msa-2023-1st.git
   11  ls
   12  cd gsc-spring-cloud-msa-2023-1st/
   13  ls
   14  cd doc
   15  ls
   16  cd ..
   17  ls
   18  cd src
   19  ls
   20  cd bardroh/
   21  ls
   22  mkdir day02
   23  ls
   24  cd day02/
   25  ls
   26  history > h1.txt
   27  vi h1.txt 
   28  exit
   29  whomai
   30  whoami
   31  ls /work/
   32  ls
   33  rm -rf /work
   34  clear
   35  ls
   36  mkdir /work
   37  cd /work
   38  git config --global user.name "Bard K. Roh"
   39  git config --global user.email "bardroh@weable.ai"
   40  git config --global --list
   41  ssh-keygen
   42  ls /root/.ssh
   43  cat ~/.ssh/id_rsa.pub
   44  git clone git@github.com:weable72/gsc-spring-cloud-msa-2023-1st.git
   45  ls
   46  cd gsc-spring-cloud-msa-2023-1st/
   47  ls
   48  docker
   49  docker ps -a
   50  docker rm -f $(docker ps -a -q)
   51  docker ps -a
   52  docker run -d --name wordpressdb -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=wordpress mysql:5.7
   53  docker ps
   54  docker logs wordpressdb
   55  docker run -d -e WORDPRESS_DB_USER=root -e WORDPRESS_DB_PASSWORD=password --name wordpress --link wordpressdb:mysql -p 80:80 wordpress:5.6
   56  docker ps
   57  docker logs wordpress
   58  docker rm -f $(docker ps -a -q)
   59  history
   60  docker run -d --name wordpressdb -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=wordpress mysql:5.7
   61  docker logs wordpressdb
   62  history
   63  docker run -d -e WORDPRESS_DB_USER=root -e WORDPRESS_DB_PASSWORD=password --name wordpress --link wordpressdb:mysql -p 80:80 wordpress:5.6
   64  docker ps
   65  docker logs wordpress
   66  docker ps
   67  docker rm -f $(docker ps -a -q)
   68  docker ps -a
   69  docker run -d --name wordpressdb_hostvolume -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=wordpress -v /home/wordpress_db:/var/lib/mysql mysql:5.7
   70  docker ps
   71  docker logs wordpressdb_hostvolume
   72  ls /home/wordpress_db/
   73  docker run -d -e WORDPRESS_DB_USER=root -e WORDPRESS_DB_PASSWORD=password --name wordpress_hostvolume --link wordpressdb_hostvolume:mysql -p 80:80 wordpress:5.6
   74  docker ps
   75  docker logs wordpress_hostvolume
   76  ls /home/wordpress_db/
   77  docker ps
   78  docker rm -f $(docker ps -a -q)
   79  docker ps -a
   80  ls /home/wordpress_db/
   81  history
   82  docker run -d --name wordpressdb_hostvolume -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=wordpress -v /home/wordpress_db:/var/lib/mysql mysql:5.7
   83  docker ps
   84  docker logs wordpressdb_hostvolume
   85  history
   86  docker run -d -e WORDPRESS_DB_USER=root -e WORDPRESS_DB_PASSWORD=password --name wordpress_hostvolume --link wordpressdb_hostvolume:mysql -p 80:80 wordpress:5.6
   87  docker ps
   88  docker logs wordpress_hostvolume
   89  cd src
   90  ls
   91  cd bardroh/
   92  ls
   93  cd day02/
   94  ls
   95  history > h2.txt
   96  ls
   97  git add h2.txt 
   98  git commit -m 'add h2.txt'
   99  git pull
  100  git config pull.rebase false 
  101  git pull
  102  git push
  103  clear
  104  s
  105  docker ps
  106  docker ps -a
  107  docker logs wordpress_hostvolume
  108  clear
  109  ls
  110  docker s
  111  docker ps
  112  docker exec -it  wordpress_hostvolume /bin/bash 
  113  docker inspect wordpress_hostvolume 
  114  docker inspect wordpress_hostvolume  | more
  115  history > h3.txt


##

docker run -d --name postgres-db \
    -e POSTGRES_DB=drupal \
    -e POSTGRES_USER=user \
    -e POSTGRES_PASSWORD=pass \
    -v /home/drupal_db:/var/lib/postgresql/data \
postgres:12

docker volume create drupal-sites
docker run --rm -v drupal-sites:/temporary/sites drupal:9 cp -aRT /var/www/html/sites /temporary/sites

docker run --name my-drupal -d -p 80:80 --link postgres-db:my-db \
    -v drupal-modules:/var/www/html/modules \
    -v drupal-profiles:/var/www/html/profiles \
    -v drupal-sites:/var/www/html/sites \
    -v drupal-themes:/var/www/html/themes \
drupal:9


##

docker로 볼륨을 붙여서 joomla + mysql을 실행한다(실습) -> 다시 시작시 재설치 하지 않음 확인
docker로 볼륨을 붙여서 drupal + postgres를 실행한다(실습) -> 다시 시작시 재설치 하지 않음 확인

##

 1  whoami
    2  mkdir /work
    3  cd /work
    4  git config --global user.name "Bard K. Roh"
    5  git config --global user.email "bardroh@weable.ai"
    6  git config --global --list
    7  ssh-keygen
    8  ls /root/.ssh
    9  cat ~/.ssh/id_rsa.pub
   10  git clone git@github.com:weable72/gsc-spring-cloud-msa-2023-1st.git
   11  ls
   12  cd gsc-spring-cloud-msa-2023-1st/
   13  ls
   14  cd doc
   15  ls
   16  cd ..
   17  ls
   18  cd src
   19  ls
   20  cd bardroh/
   21  ls
   22  mkdir day02
   23  ls
   24  cd day02/
   25  ls
   26  history > h1.txt
   27  vi h1.txt 
   28  exit
   29  whomai
   30  whoami
   31  ls /work/
   32  ls
   33  rm -rf /work
   34  clear
   35  ls
   36  mkdir /work
   37  cd /work
   38  git config --global user.name "Bard K. Roh"
   39  git config --global user.email "bardroh@weable.ai"
   40  git config --global --list
   41  ssh-keygen
   42  ls /root/.ssh
   43  cat ~/.ssh/id_rsa.pub
   44  git clone git@github.com:weable72/gsc-spring-cloud-msa-2023-1st.git
   45  ls
   46  cd gsc-spring-cloud-msa-2023-1st/
   47  ls
   48  docker
   49  docker ps -a
   50  docker rm -f $(docker ps -a -q)
   51  docker ps -a
   52  docker run -d --name wordpressdb -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=wordpress mysql:5.7
   53  docker ps
   54  docker logs wordpressdb
   55  docker run -d -e WORDPRESS_DB_USER=root -e WORDPRESS_DB_PASSWORD=password --name wordpress --link wordpressdb:mysql -p 80:80 wordpress:5.6
   56  docker ps
   57  docker logs wordpress
   58  docker rm -f $(docker ps -a -q)
   59  history
   60  docker run -d --name wordpressdb -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=wordpress mysql:5.7
   61  docker logs wordpressdb
   62  history
   63  docker run -d -e WORDPRESS_DB_USER=root -e WORDPRESS_DB_PASSWORD=password --name wordpress --link wordpressdb:mysql -p 80:80 wordpress:5.6
   64  docker ps
   65  docker logs wordpress
   66  docker ps
   67  docker rm -f $(docker ps -a -q)
   68  docker ps -a
   69  docker run -d --name wordpressdb_hostvolume -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=wordpress -v /home/wordpress_db:/var/lib/mysql mysql:5.7
   70  docker ps
   71  docker logs wordpressdb_hostvolume
   72  ls /home/wordpress_db/
   73  docker run -d -e WORDPRESS_DB_USER=root -e WORDPRESS_DB_PASSWORD=password --name wordpress_hostvolume --link wordpressdb_hostvolume:mysql -p 80:80 wordpress:5.6
   74  docker ps
   75  docker logs wordpress_hostvolume
   76  ls /home/wordpress_db/
   77  docker ps
   78  docker rm -f $(docker ps -a -q)
   79  docker ps -a
   80  ls /home/wordpress_db/
   81  history
   82  docker run -d --name wordpressdb_hostvolume -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=wordpress -v /home/wordpress_db:/var/lib/mysql mysql:5.7
   83  docker ps
   84  docker logs wordpressdb_hostvolume
   85  history
   86  docker run -d -e WORDPRESS_DB_USER=root -e WORDPRESS_DB_PASSWORD=password --name wordpress_hostvolume --link wordpressdb_hostvolume:mysql -p 80:80 wordpress:5.6
   87  docker ps
   88  docker logs wordpress_hostvolume
   89  cd src
   90  ls
   91  cd bardroh/
   92  ls
   93  cd day02/
   94  ls
   95  history > h2.txt

##

  1  whoami
    2  curl -fsSL https://get.docker.com -o install-docker.sh
    3  ls
    4  cat install-docker.sh
    5  cat install-docker.sh | more
    6  sh install-docker.sh --dry-run
    7  sudo sh install-docker.sh
    8  docker -v
    9  docker ps
   10  docker -v
   11  docker ps
   12  docker -v
   13  docker run -it centos:7
   14  docker pull ubuntu:20.04
   15  docker images
   16  docker pull ubuntu:18.04
   17  docker images
   18  docker pull centos:5
   19  docker images
   20  docker create -i -t --name myubuntu ubuntu:20.04
   21  docker ps
   22  docker ps -a
   23  docker start myubuntu
   24  docker ps
   25  docker attach myubuntu
   26  docker ps
   27  docker attach myubuntu
   28  docker ps
   29  docker ps -a
   30  docker run -i -t ubuntu:20.04
   31  docker run -i -t ubuntu:20.04 echo hello world!
   32  docker ps -a
   33  docker rename myubuntu renamed
   34  docker ps 
   35  docker rename renamed myubuntu
   36  docker ps 
   37  docker ps -a
   38  docker rm myubuntu
   39  docker rm unruffled_borg
   40  docker ps -a
   41  docker rm -f myubuntu
   42  docker ps -a
   43  docker container prune
   44  docker ps -a -q
   45  docker ps -a 
   46  docker ps -a -q
   47  docker rm -f $(docker ps -a -q)
   48  docker ps -a
   49  docker images
   50  docker run -i -t --name network_test ubuntu:14.04
   51  clear
   52  docker ps
   53  docker run -it --name mywebserver -p 80:80 ubuntu:14.04
   54  clear
   55  sudo su - root
   56  clear
   57  ls
   58  cd /work/
   59  ls
   60  cd gsc-spring-cloud-msa-2023-1st/
   61  ls
   62  history
   63  cd src
   64  ls
   65  cd bardroh/
   66  ls
   67  cd day02/
   68  ls
   69  rm h1.txt 
   70  history > h1.txt
